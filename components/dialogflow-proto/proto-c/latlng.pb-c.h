/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: google/type/latlng.proto */

#ifndef PROTOBUF_C_google_2ftype_2flatlng_2eproto__INCLUDED
#define PROTOBUF_C_google_2ftype_2flatlng_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Google__Type__LatLng Google__Type__LatLng;


/* --- enums --- */


/* --- messages --- */

/*
 * An object representing a latitude/longitude pair. This is expressed as a pair
 * of doubles representing degrees latitude and degrees longitude. Unless
 * specified otherwise, this must conform to the
 * <a href="http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf">WGS84
 * standard</a>. Values must be within normalized ranges.
 * Example of normalization code in Python:
 *     def NormalizeLongitude(longitude):
 *       """Wraps decimal degrees longitude to [-180.0, 180.0]."""
 *       q, r = divmod(longitude, 360.0)
 *       if r > 180.0 or (r == 180.0 and q <= -1.0):
 *         return r - 360.0
 *       return r
 *     def NormalizeLatLng(latitude, longitude):
 *       """Wraps decimal degrees latitude and longitude to
 *       [-90.0, 90.0] and [-180.0, 180.0], respectively."""
 *       r = latitude % 360.0
 *       if r <= 90.0:
 *         return r, NormalizeLongitude(longitude)
 *       elif r >= 270.0:
 *         return r - 360, NormalizeLongitude(longitude)
 *       else:
 *         return 180 - r, NormalizeLongitude(longitude + 180.0)
 *     assert 180.0 == NormalizeLongitude(180.0)
 *     assert -180.0 == NormalizeLongitude(-180.0)
 *     assert -179.0 == NormalizeLongitude(181.0)
 *     assert (0.0, 0.0) == NormalizeLatLng(360.0, 0.0)
 *     assert (0.0, 0.0) == NormalizeLatLng(-360.0, 0.0)
 *     assert (85.0, 180.0) == NormalizeLatLng(95.0, 0.0)
 *     assert (-85.0, -170.0) == NormalizeLatLng(-95.0, 10.0)
 *     assert (90.0, 10.0) == NormalizeLatLng(90.0, 10.0)
 *     assert (-90.0, -10.0) == NormalizeLatLng(-90.0, -10.0)
 *     assert (0.0, -170.0) == NormalizeLatLng(-180.0, 10.0)
 *     assert (0.0, -170.0) == NormalizeLatLng(180.0, 10.0)
 *     assert (-90.0, 10.0) == NormalizeLatLng(270.0, 10.0)
 *     assert (90.0, 10.0) == NormalizeLatLng(-270.0, 10.0)
 */
struct  _Google__Type__LatLng
{
  ProtobufCMessage base;
  /*
   * The latitude in degrees. It must be in the range [-90.0, +90.0].
   */
  double latitude;
  /*
   * The longitude in degrees. It must be in the range [-180.0, +180.0].
   */
  double longitude;
};
#define GOOGLE__TYPE__LAT_LNG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__type__lat_lng__descriptor) \
    , 0, 0 }


/* Google__Type__LatLng methods */
void   google__type__lat_lng__init
                     (Google__Type__LatLng         *message);
size_t google__type__lat_lng__get_packed_size
                     (const Google__Type__LatLng   *message);
size_t google__type__lat_lng__pack
                     (const Google__Type__LatLng   *message,
                      uint8_t             *out);
size_t google__type__lat_lng__pack_to_buffer
                     (const Google__Type__LatLng   *message,
                      ProtobufCBuffer     *buffer);
Google__Type__LatLng *
       google__type__lat_lng__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__type__lat_lng__free_unpacked
                     (Google__Type__LatLng *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Google__Type__LatLng_Closure)
                 (const Google__Type__LatLng *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor google__type__lat_lng__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_google_2ftype_2flatlng_2eproto__INCLUDED */
